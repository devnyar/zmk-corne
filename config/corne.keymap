#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define DEFAULT_L 0
#define NUMBERS_L 1
#define FUNC_L 2
#define SETTINGS_L 3

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        caplocks {
            bindings = <&kp CAPS>;
            key-positions = <2 1>;
        };

        left_bracket_brace {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <18 30>;
        };

        right_bracket_brace {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <30 31>;
        };

        left_parenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <7 8>;
        };

        right_parenthesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <8 9>;
        };

        less_than {
            bindings = <&kp LESS_THAN>;
            key-positions = <6 18>;
        };

        greater_than {
            bindings = <&kp GREATER_THAN>;
            key-positions = <6 7>;
        };

        at {
            bindings = <&kp AT_SIGN>;
            key-positions = <5 17>;
        };

        grave {
            bindings = <&kp TILDE>;
            key-positions = <13 25>;
        };

        hash {
            bindings = <&kp HASH>;
            key-positions = <14 13>;
        };

        backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <14 26>;
        };

        dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <13 1>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <4 16>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <15 3>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <15 27>;
        };

        underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <16 28>;
        };

        asterisk {
            bindings = <&kp ASTERISK>;
            key-positions = <8 20>;
        };

        slash {
            bindings = <&kp SLASH>;
            key-positions = <20 32>;
        };

        ampersand {
            bindings = <&kp AMPERSAND>;
            key-positions = <9 21>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <21 33>;
        };

        single_quote {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <10 22>;
        };

        double_quote {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <22 34>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <19 20>;
        };

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <20 21>;
        };

        exclamation {
            bindings = <&kp EXCLAMATION>;
            key-positions = <2 14>;
        };
    };

    macros {
        input_switch: input_switch {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LC(LG(SPACE)))>;
            label = "INPUT_SWITCH";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC         &kp Q  &kp W  &kp E      &kp R             &kp T            &kp Y  &kp U         &kp I      &kp O    &kp P          &kp BSPC
&kp TAB         &kp A  &kp S  &kp D      &kp F             &kp G            &kp H  &kp J         &kp K      &kp L    &kp SEMICOLON  &kp RET
&sk LEFT_SHIFT  &kp Z  &kp X  &kp C      &kp V             &kp B            &kp N  &kp M         &kp COMMA  &kp DOT  &kp FSLH       &kp RSHFT
                              &kp SPACE  &kp LEFT_CONTROL  &kp LEFT_META    &mo 2  &sk LEFT_ALT  &mo 1
            >;
        };

        number_layer {
            bindings = <
&kp TILDE       &kp N1   &kp N2   &kp N3                &kp N4                &kp N5               &kp N6    &kp N7        &kp N8   &kp N9     &kp N0     &kp PAGE_UP
&kp GRAVE       &kp F16  &kp F17  &kp GLOBE             &kp C_PLAY_PAUSE      &kp C_VOLUME_UP      &kp LEFT  &kp DOWN      &kp UP   &kp RIGHT  &kp MINUS  &kp PAGE_DOWN
&kp LEFT_SHIFT  &kp F18  &kp F19  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp C_VOLUME_DOWN    &tog 4    &kp HOME      &kp END  &kp N3     &kp EQUAL  &kp RIGHT_SHIFT
                                  &kp SPACE             &sk LEFT_COMMAND      &sk LEFT_CONTROL     &trans    &sk LEFT_ALT  &trans
            >;
        };

        func {
            bindings = <
&none           &kp F1   &kp F2   &kp F3     &kp F4            &kp F5              &msc MOVE_X(-20)  &mkp LCLK       &mmv MOVE_UP    &mkp RCLK        &msc MOVE_Y(-20)  &input_switch
&mo 3           &kp F6   &kp F7   &kp F8     &kp F9            &kp F10             &mkp MB4          &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &mkp MB5          &trans
&kp LEFT_SHIFT  &kp F11  &kp F12  &kp F13    &kp F14           &kp F15             &msc MOVE_X(20)   &tog 4          &mkp MCLK       &kp F19          &msc MOVE_Y(20)   &trans
                                  &kp SPACE  &sk LEFT_COMMAND  &sk LEFT_CONTROL    &trans            &sk LEFT_ALT    &trans
            >;
        };

        settings {
            bindings = <
&none   &sys_reset  &out OUT_BLE  &out OUT_USB  &ext_power EP_ON  &ext_power EP_OFF    &sys_reset  &none          &bt BT_CLR     &trans         &trans         &trans
&trans  &bl BL_ON   &bl BL_INC    &trans        &out OUT_TOG      &trans               &bt BT_NXT  &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &trans
&trans  &bl BL_OFF  &bl BL_DEC    &trans        &trans            &trans               &bt BT_PRV  &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &trans
                                  &trans        &trans            &trans               &trans      &trans         &trans
            >;
        };

        mouse {
            bindings = <
&trans  &msc MOVE_Y(-20)  &mkp RCLK       &mmv MOVE_UP    &mkp LCLK        &msc MOVE_X(-20)    &msc MOVE_X(-20)  &mkp LCLK       &mmv MOVE_UP    &mkp RCLK        &msc MOVE_Y(-20)  &trans
&trans  &mkp MB5          &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &mkp MB4            &mkp MB4          &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &mkp MB5          &trans
&trans  &msc MOVE_Y(20)   &trans          &mkp MCLK       &trans           &msc MOVE_X(20)     &msc MOVE_X(20)   &tog 4          &mkp MCLK       &trans           &msc MOVE_Y(20)   &trans
                                          &trans          &trans           &trans              &trans            &trans          &to 0
            >;
        };
    };
};
